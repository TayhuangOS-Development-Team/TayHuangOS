MULTI_ARCHITECURE_MODULE := true
MODULENAME := ulogger

include $(SCRIPTDIR)/compile.mk
include $(SCRIPTDIR)/util.mk

NASM_SRC :=

C_SRC := logger

CPP_SRC := 

C_FLAGS += $(ARCHITECTURE_FLAGS)
CPP_FLAGS += $(ARCHITECTURE_FLAGS)

# C
C_FLAGS += -c -Wall -Wno-int-conversion -Wstrict-prototypes \
		   -fno-strict-aliasing -fomit-frame-pointer -fno-pic -fno-asynchronous-unwind-tables \
 		   -ffreestanding -fno-stack-protector -Wno-int-to-pointer-cast -mno-red-zone\
		   -fno-toplevel-reorder -fno-tree-scev-cprop -Os
C_INCLUDE += -I"$(CUR_DIR)" -I"$(ROOTDIR)/include/" -I"$(ROOTDIR)/include/std/"
C_DEFS :=
C_FLAGS += $(call make_c_flags)

# C++
CPP_FLAGS += -c -Wall -fno-rtti -fno-exceptions \
		     -fno-strict-aliasing -fomit-frame-pointer -fno-pic -fno-asynchronous-unwind-tables \
 		     -ffreestanding -fno-stack-protector -Wno-int-to-pointer-cast -mno-red-zone\
		     -fno-toplevel-reorder -fno-tree-scev-cprop -Os -Wno-pointer-arith
CPP_INCLUDE += -I"$(CUR_DIR)" -I"$(ROOTDIR)/include/" -I"$(ROOTDIR)/include/std/"
CPP_DEFS  := 
CPP_FLAGS += $(call make_cpp_flags)

# LD

LD_FLAGS += -s -z max-page-size=0x100
LIBRARIES +=
LD_SCRIPT := 
LD_FLAGS += $(call make_ld_flags)

# Doxygen
DOXYGEN_CONFIG := DoxygenFile

OUTPUT := $(BINDIR)/libulogger.a

OBJECTS += $(call make_objects, $(NASM_SRC))
OBJECTS += $(call make_objects, $(C_SRC))
OBJECTS += $(call make_objects, $(CPP_SRC))

build: $(OBJECTS)
	$(call ar_link, $(OBJECTS), $(OUTPUT))

clean:
	$(RM) $(OUTPUT) $(OBJECTS)

doc:
	$(DOXYGEN) $(DOXYGEN_CONFIG)